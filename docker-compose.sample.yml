version: "3"
services:
  # nginx:
  #   build:
  #     context: ./services/nginx
  #     args:
  #       NGINX_VERSION: nginx:${NGINX_VERSION}
  #       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #       NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
  #   container_name: nginx
  #   ports:
  #     - "${NGINX_HTTP_HOST_PORT}:80"
  #     - "${NGINX_HTTPS_HOST_PORT}:443"
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #     - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
  #     - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
  #     - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
  #     - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
  #     - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
  #     - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
  #   environment:
  #     TZ: "$TZ"
  #   restart: always
  #   networks:
  #     - default

  # openresty:
  #   build: 
  #     context: ./services/openresty
  #     args:
  #       OPENRESTY_VERSION: openresty/openresty:${OPENRESTY_VERSION}
  #       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #       TZ: "$TZ"
  #   container_name: openresty
  #   ports:
  #     - "${OPENRESTY_HTTP_HOST_PORT}:80"
  #     - "${OPENRESTY_HTTPS_HOST_PORT}:443"
  #     - "${OPENRESTY_CUSTOM_HOST_PORT}:8000"
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:cached
  #     - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
  #     - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
  #     - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
  #     - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
  #     - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
  #     - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
  #     - ${OENRESTY_HTML_FILE}:/usr/local/openresty/nginx/html/
  #     - ${OPENRESTY_THIRDLUA_FILE}:/usr/local/openresty/nginx/thirdlua/
  #   restart: always
  #   networks:
  #     - default
  #   command:
  #     - /bin/sh 
  #     - -c
  #     - |
  #       crond
  #       /usr/local/openresty/bin/openresty -g "daemon off;"

  node:
    build:
      context: ./services/node
      args:
        NODE_VERSION: node:${NODE_VERSION}
        YARN_ENV: "$YARN_ENV"
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        TZ: "$TZ"
    container_name: node
    volumes:
      - ${SOURCE_DIR}:/www/:rw
    restart: always
    ports:
      - "8081:80"
    stdin_open: true
    tty: true
    networks:
      - default

networks:
  default:
